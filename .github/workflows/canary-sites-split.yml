name: 'Split Canary Sites'

# run this job on after canary_release has completed
on:
  workflow_run:
    workflows: [Canary Release]
    types:
      - completed

# split the starers to repos to be deployed on the platform
# for easy QA testing
jobs:
  # this job should only run if canary_release was successful
  on-success:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}

    strategy:
      fail-fast: false
      matrix:
        # define package to repository map
        include:
          - local_path: 'starters/next-drupal-starter'
            split_repository: 'next-drupal-starter-umami-canary'
          - local_path: 'starters/next-drupal-starter'
            split_repository: 'next-drupal-starter-default-canary'
          - local_path: 'starters/gatsby-wordpress-starter'
            split_repository: 'gatsby-wordpress-starter-default-canary'
          - local_path: 'starters/next-wordpress-starter'
            split_repository: 'next-wordpress-starter-default-canary'
          # canary docs site
          - local_path: 'web'
            split_repository: 'decoupled-kit-docs-canary'

    steps:
      - uses: actions/checkout@v2
      # Add Github workflow before split
      - run: |
          mkdir -p ${{ github.workspace }}/${{ matrix.local_path }}/.github/workflows
      - run: |
          cp ${{ github.workspace }}/.github/templates/trigger-e2e.yml.template ${{ github.workspace }}/${{ matrix.local_path }}/.github/workflows/trigger-e2e.yml
      - uses: 'symplify/monorepo-split-github-action@2.1'
        with:
          # ↓ split <local_path> directory
          package_directory: '${{ matrix.local_path }}'

          # ↓ into https://github.com/org/split_repository repository
          repository_organization: 'pantheon-systems'
          repository_name: '${{ matrix.split_repository }}'

          # ↓ the user signed under the split commit
          user_name: 'brian-ci'
          user_email: 'brian.perry@pantheon.io'
      - name: Send custom JSON data to Slack workflow
        id: slack
        uses: slackapi/slack-github-action@v1.23.0
        with:
          # For posting a rich message using Block Kit
          payload: |
            {
              "text": "GitHub Action result: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "GitHub Action result: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}"
                  }
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
